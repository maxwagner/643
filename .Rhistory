.49 * .51 ^ 2
.49 * (.51 ^ 2)
p1 <- (factorial(3) / (factorial(2) (3 - 1)))
p1 <- (factorial(3) / (factorial(2) * factorial(3 - 1)))
p1 <- (factorial(3) / (factorial(2) * factorial(3 - 2)))
p2 <- .51 ^ 2
x <- .49 * (.51 ^ 2); x
p3 <- (1 - .51) ^ (3 - 2)
answer <- p1 * p2 * p3
p1 <- factorial(3) / (factorial(2) * factorial(3 - 2))
p2 <- .51 ^ 2
p3 <- (1 - .51) ^ (3 - 2)
answer <- p1 * p2 * p3
p1 <- (factorial(3) / (factorial(2) * factorial(3 - 2)))
p2 <- .51 ^ 2 * ((1 - .51) ^ (3 - 2))
answer <- p1 * p2
outcomes <- matrix("G", "G", "B", "G", "B", "G", "B", "G", "G", byrow = T, nrow = 3)
outcomes <- matrix(c("G", "G", "B", "G", "B", "G", "B", "G", "G"), byrow = T, nrow = 3)
outcomes
g_1_2 <- (.49 ^ 1) * (1 - .49) ^ (1 - 1)
outcomes <- matrix(c("G", "B", "B", "B", "G", "B", "B", "B", "G"), byrow = T, nrow = 3)
outcomes
g_1_1 <- (.49 ^ 0) * (1 - .49) ^ (0 - 0)
.49 ^ 0
(.49 ^ 1) * (1 - .49) ^ (1 - 1)
(factorial(3) / (factorial(2) * factorial(3 - 2))) * (.49 ^ 1) * (1 - .49) ^ (1 - 1)
g_1_1 <- (factorial(0) / (factorial(0) * factorial(0 - 0))) * (.49 ^ 1) * (1 - .49) ^ (1 - 1)
g_1_1 <- (factorial(0) / (factorial(0) * factorial(0 - 0))) * ((.49 ^ 1) * (1 - .49) ^ (1 - 1))
b_1_2 <- (factorial(1) / (factorial(0) * factorial(1 - 0))) * ((.51 ^ 1) * (1 - .51) ^ (1 - 1))
b_1_2 <- (factorial(1) / (factorial(0) * factorial(1 - 0))) * ((.51 ^ 1) * (1 - .51) ^ (2 - 1))
b_2_3 <- (factorial(2) / (factorial(1) * factorial(2 - 1))) * ((.51 ^ 2) * (1 - .51) ^ (3 - 2))
answer <- g_1_1 * b_1_2 * b_2_3
answer <- p1 * p2 * p3; answer
p1 <- factorial(3) / (factorial(2) * factorial(3 - 2))
p2 <- .51 ^ 2
p3 <- (1 - .51) ^ (3 - 2)
answer <- p1 * p2 * p3; answer
g_1_1 <- (factorial(0) / (factorial(0) * factorial(0 - 0))) * ((.49 ^ 1) * (1 - .49) ^ (1 - 1))
b_1_2 <- (factorial(1) / (factorial(0) * factorial(1 - 0))) * ((.51 ^ 1) * (1 - .51) ^ (2 - 1))
b_2_3 <- (factorial(2) / (factorial(1) * factorial(2 - 1))) * ((.51 ^ 2) * (1 - .51) ^ (3 - 2))
answer <- g_1_1 * b_1_2 * b_2_3
g_1_1 <- (factorial(0) / (factorial(0) * factorial(0 - 0))) * ((.49 ^ 1) * (1 - .49) ^ (1 - 1))
b_1_2 <- (factorial(1) / (factorial(0) * factorial(1 - 0))) * ((.51 ^ 1) * (1 - .51) ^ (2 - 1))
b_2_3 <- (factorial(2) / (factorial(1) * factorial(2 - 1))) * ((.51 ^ 2) * (1 - .51) ^ (3 - 2))
answer <- g_1_1 * b_1_2 * b_2_3; answer
g_1_1 <- (factorial(0) / (factorial(0) * factorial(0 - 0))) * ((.49 ^ 1) * (1 - .49) ^ (1 - 1))
b_1_2 <- (factorial(1) / (factorial(0) * factorial(1 - 0))) * ((.51 ^ 2) * (1 - .51) ^ (2 - 1))
b_2_3 <- (factorial(2) / (factorial(1) * factorial(2 - 1))) * ((.51 ^ 3) * (1 - .51) ^ (3 - 2))
answer <- g_1_1 * b_1_2 * b_2_3; answer
b_2_3 <- (factorial(2) / (factorial(1) * factorial(2 - 1))) * ((.51 ^ 3) * (1 - .51) ^ (3 - 2))
outcomes <- matrix(c("G", "B", "B", "B", "G", "B", "B", "B", "G"), byrow = T, nrow = 3); outcomes
b_1_1 <- (factorial(0) / (factorial(0) * factorial(0 - 0))) * ((.51 ^ 1) * (1 - .51) ^ (1 - 1))
g_1_2 <- (factorial(1) / (factorial(0) * factorial(1 - 0))) * ((.49 ^ 2) * (1 - .49) ^ (2 - 1))
b_2_3 <- (factorial(2) / (factorial(1) * factorial(2 - 1))) * ((.51 ^ 3) * (1 - .51) ^ (3 - 2))
answer_bgb <- b_1_1 * g_1_2 * b_2_3; answer_bgb
g_1_1 <- (factorial(0) / (factorial(0) * factorial(0 - 0))) * ((.49 ^ 1) * (1 - .49) ^ (1 - 1))
b_1_2 <- (factorial(1) / (factorial(0) * factorial(1 - 0))) * ((.51 ^ 2) * (1 - .51) ^ (2 - 1))
b_2_3 <- (factorial(2) / (factorial(1) * factorial(2 - 1))) * ((.51 ^ 3) * (1 - .51) ^ (3 - 2))
answer_gbb <- g_1_1 * b_1_2 * b_2_3; answer_gbb
g_1_3 <- (factorial(2) / (factorial(0) * factorial(2 - 0))) * ((.49 ^ 3) * (1 - .49) ^ (3 - 1))
b_1_1 <- (factorial(0) / (factorial(0) * factorial(0 - 0))) * ((.51 ^ 1) * (1 - .51) ^ (1 - 1))
b_2_2 <- (factorial(1) / (factorial(1) * factorial(1 - 1))) * ((.51 ^ 2) * (1 - .51) ^ (2 - 2))
g_1_3 <- (factorial(2) / (factorial(0) * factorial(2 - 0))) * ((.49 ^ 3) * (1 - .49) ^ (3 - 1))
answer_bbg <- b_1_1 * b_2_2 * g_1_3; answer_bbg
dbinom(4, size=12, prob=0.2)
dbinom(2, size = 3, prob = 0.51)
p1 <- factorial(3) / (factorial(2) * factorial(3 - 2))
p2 <- .51 ^ 2
p3 <- (1 - .51) ^ (3 - 2)
answer <- p1 * p2 * p3; answer
install.packages("stats")
install.packages("stats")
install.packages("stats")
dnbinom(2, size = 3, prob = 0.51)
dnbinom(2, size = 2, n = 3, prob = 0.51)
answer <- answer_gbb + answer_bgb + answer_bbg
dnbinom(2, size = 2, prob = 0.51) # with dnbinom
pbinom(2, size = 3, prob = 0.51) # with dnbinom
dnbinom(2, size = 3, prob = 0.51) # with dnbinom
g_1_1 <- (factorial(0) / (factorial(0) * factorial(0 - 0))) * ((.49 ^ 1) * (1 - .49) ^ (1 - 1))
b_1_2 <- (factorial(1) / (factorial(0) * factorial(1 - 0))) * ((.51 ^ 2) * (1 - .51) ^ (2 - 1))
b_2_3 <- (factorial(2) / (factorial(1) * factorial(2 - 1))) * ((.51 ^ 3) * (1 - .51) ^ (3 - 2))
answer_gbb <- g_1_1 * b_1_2 * b_2_3 #GBB
b_1_1 <- (factorial(0) / (factorial(0) * factorial(0 - 0))) * ((.51 ^ 1) * (1 - .51) ^ (1 - 1))
g_1_2 <- (factorial(1) / (factorial(0) * factorial(1 - 0))) * ((.49 ^ 2) * (1 - .49) ^ (2 - 1))
b_2_3 <- (factorial(2) / (factorial(1) * factorial(2 - 1))) * ((.51 ^ 3) * (1 - .51) ^ (3 - 2))
answer_bgb <- b_1_1 * g_1_2 * b_2_3 #BGB
b_1_1 <- (factorial(0) / (factorial(0) * factorial(0 - 0))) * ((.51 ^ 1) * (1 - .51) ^ (1 - 1))
b_2_2 <- (factorial(1) / (factorial(1) * factorial(1 - 1))) * ((.51 ^ 2) * (1 - .51) ^ (2 - 2))
answer_bbg <- b_1_1 * b_2_2# BBG
answer <- answer_gbb + answer_bgb + answer_bbg; answer # final
# GBB
.49 * .51 * .51
# BGB
.51 * .49 * .51
# BBG
.51 * .51 * .49
dnbinom(2, size = 3, prob = 0.51) # with dnbinom
g_1_1 <- (factorial(0) / (factorial(0) * factorial(0 - 0))) * ((.49 ^ 1) * (1 - .49) ^ (1 - 1))
b_1_2 <- (factorial(1) / (factorial(0) * factorial(1 - 0))) * ((.51 ^ 2) * (1 - .51) ^ (2 - 1))
b_2_3 <- (factorial(2) / (factorial(1) * factorial(2 - 1))) * ((.51 ^ 3) * (1 - .51) ^ (3 - 2))
answer_gbb <- g_1_1 * b_1_2 * b_2_3 #GBB
b_1_1 <- (factorial(0) / (factorial(0) * factorial(0 - 0))) * ((.51 ^ 1) * (1 - .51) ^ (1 - 1))
g_1_2 <- (factorial(1) / (factorial(0) * factorial(1 - 0))) * ((.49 ^ 2) * (1 - .49) ^ (2 - 1))
b_2_3 <- (factorial(2) / (factorial(1) * factorial(2 - 1))) * ((.51 ^ 3) * (1 - .51) ^ (3 - 2))
answer_bgb <- b_1_1 * g_1_2 * b_2_3 #BGB
b_1_1 <- (factorial(0) / (factorial(0) * factorial(0 - 0))) * ((.51 ^ 1) * (1 - .51) ^ (1 - 1))
b_2_2 <- (factorial(1) / (factorial(1) * factorial(1 - 1))) * ((.51 ^ 2) * (1 - .51) ^ (2 - 2))
g_1_3 <- (factorial(2) / (factorial(0) * factorial(2 - 0))) * ((.49 ^ 3) * (1 - .49) ^ (3 - 1))
answer_bbg <- b_1_1 * b_2_2 * g_1_3;# BBG
answer <- answer_gbb + answer_bgb + answer_bbg; answer # final
g_1_1 <- (factorial(0) / (factorial(0) * factorial(0 - 0))) * ((.49 ^ 1) * (1 - .49) ^ (1 - 1))
b_1_2 <- (factorial(1) / (factorial(0) * factorial(1 - 0))) * ((.51 ^ 2) * (1 - .51) ^ (2 - 1))
b_2_3 <- (factorial(2) / (factorial(1) * factorial(2 - 1))) * ((.51 ^ 3) * (1 - .51) ^ (3 - 2))
answer_gbb <- g_1_1 * b_1_2 * b_2_3 #GBB
b_1_1 <- (factorial(0) / (factorial(0) * factorial(0 - 0))) * ((.51 ^ 1) * (1 - .51) ^ (1 - 1))
g_1_2 <- (factorial(1) / (factorial(0) * factorial(1 - 0))) * ((.49 ^ 2) * (1 - .49) ^ (2 - 1))
b_2_3 <- (factorial(2) / (factorial(1) * factorial(2 - 1))) * ((.51 ^ 3) * (1 - .51) ^ (3 - 2))
answer_bgb <- b_1_1 * g_1_2 * b_2_3 #BGB
b_1_1 <- (factorial(0) / (factorial(0) * factorial(0 - 0))) * ((.51 ^ 1) * (1 - .51) ^ (1 - 1))
b_2_2 <- (factorial(1) / (factorial(1) * factorial(1 - 1))) * ((.51 ^ 2) * (1 - .51) ^ (2 - 2))
g_1_3 <- (factorial(2) / (factorial(0) * factorial(2 - 0))) * ((.49 ^ 3) * (1 - .49) ^ (3 - 1))
answer_bbg <- b_1_1 * b_2_2 * g_1_3;# BBG
answer <- answer_gbb + answer_bgb + answer_bbg; answer # final
(.49) * (.51 ^ 2)
.49 * .51 * .51
(.85 ^ 7) * (.15 ^ 3)
(.85 ^ 7) * (.15 ^ 3)
p1 <- (factorial(10 - 1)) / (factorial(3 - 1) / factorial(10 - 3))
answer <- p1 * p2
p2 <- (.15 ^ 3) * ((1 - .15) ^ (10 - 3))
answer <- p1 * p2
p1 <- (factorial(10 - 1)) / (factorial(3 - 1) / factorial(10 - 3))
p2 <- (.15 ^ 3) * ((1 - .15) ^ (10 - 3))
answer <- p1 * p2
p1 <- (factorial(10 - 1)) / (factorial(3 - 1) / factorial(10 - 3))
p1 <- (factorial(10 - 1)) / (factorial(3 - 1) * factorial(10 - 3))
p2 <- (.15 ^ 3) * (.85 ^ 7)
answer <- p1 * p2
answer <- p1 * p2; answer
dbinom(3, 10, .15)
dbinom(2, 3, .51)
.49 * .51 * .51
p1 <- (factorial(10 - 1)) / (factorial(3 - 1) * factorial(10 - 3))
p2 <- (.15 ^ 3) * (.85 ^ 7)
answer <- p1 * p2; answer
p1 <- factorial(3) / (factorial(2) * factorial(3 - 2))
p2 <- (.51 ^ 2) * (.49 ^ 1)
answer <- p1 * p2; answer
p1 <- factorial(10) / (factorial(3) * factorial(10 - 3))
p2 <- (.15 ^ 3) * (.85 ^ 7)
answer <- p1 * p2; answer
p1 <- (factorial(10 - 1)) / (factorial(3 - 1) * factorial(10 - 3))
p2 <- (.15 ^ 3) * (.85 ^ 7)
answer <- p1 * p2; answer
p1 <- (factorial(1 - 1)) / (factorial(1 - 1) * factorial(1 - 3))
p2 <- (.49 ^ 1) * (.51 ^ 0)
answer <- p1 * p2; answer
p1 <- (factorial(1 - 1)) / (factorial(1 - 1) * factorial(1 - 1))
p2 <- (.49 ^ 1) * (.51 ^ 0)
answer <- p1 * p2; answer
p1 <- (factorial(2 - 1)) / (factorial(1 - 1) * factorial(2 - 1))
p2 <- (.51 ^ 1) * (.49 ^ 1)
boy_1_2 <- p1 * p2
p1 <- (factorial(3 - 1)) / (factorial(2 - 1) * factorial(3 - 2))
p2 <- (.51 ^ 2) * (.49 ^ 1)
boy_2_3 <- p1 * p2
girl_1_1 + boy_1_2 + boy_2_3
# 1st girl 1st
girl_1_1 <- .49
# 1st boy 2nd
p1 <- (factorial(2 - 1)) / (factorial(1 - 1) * factorial(2 - 1))
p2 <- (.51 ^ 1) * (.49 ^ 1)
boy_1_2 <- p1 * p2
# 2nd boy 3rd
p1 <- (factorial(3 - 1)) / (factorial(2 - 1) * factorial(3 - 2))
p2 <- (.51 ^ 2) * (.49 ^ 1)
boy_2_3 <- p1 * p2
#sum
girl_1_1 + boy_1_2 + boy_2_3
# 1st girl 1st
girl_1_1 <- .49
# 1st boy 2nd
p1 <- (factorial(2 - 1)) / (factorial(1 - 1) * factorial(2 - 1))
p2 <- (.51 ^ 1) * (.49 ^ 1)
boy_1_2 <- p1 * p2
# 2nd boy 3rd
p1 <- (factorial(3 - 1)) / (factorial(2 - 1) * factorial(3 - 2))
p2 <- (.51 ^ 2) * (.49 ^ 1)
boy_2_3 <- p1 * p2
#sum
girl_1_1 + boy_1_2 + boy_2_3
girl_1_1 * boy_1_2 * boy_2_3
p1 <- factorial(3) / (factorial(2) * factorial(3 - 2))
p2 <- (.51 ^ 2) * (.49 ^ 1)
answer <- p1 * p2; answer
girl_1_1 <- 1
# 1st boy 2nd
p1 <- (factorial(2 - 1)) / (factorial(1 - 1) * factorial(2 - 1))
p2 <- (.51 ^ 1) * (.49 ^ 1)
boy_1_2 <- p1 * p2
# 2nd boy 3rd
p1 <- (factorial(3 - 1)) / (factorial(2 - 1) * factorial(3 - 2))
p2 <- (.51 ^ 2) * (.49 ^ 1)
boy_2_3 <- p1 * p2
#sum
girl_1_1 * boy_1_2 * boy_2_3
.51 * .49
.51 * .49 * .51
.127449 * 3
.49 * .51 * .51 * 3
install.packages("sparkR")
movies <- read.csv("https://raw.githubusercontent.com/maxwagner/643/master/ml-latest-small/movies.csv",
stringsAsFactors = FALSE)
ratings <- read.csv("https://raw.githubusercontent.com/maxwagner/643/master/ml-latest-small/ratings.csv",
stringsAsFactors = FALSE)
head(movies)
head(ratings)
setwd("~/github/643")
